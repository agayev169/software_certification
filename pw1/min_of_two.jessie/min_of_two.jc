# IntModel = bounded
# InvariantPolicy = Arguments
# SeparationPolicy = Regions
# AnnotationPolicy = None
# AbstractDomain = Pol

axiomatic Padding {

  logic type padding
  
}

type int8 = -128..127

type int32 = -2147483648..2147483647

tag charP = {
  int8 charM: 8;
}

type charP = [charP]

tag voidP = {
}

type voidP = [voidP]

int32 min(int32 a, int32 b)
behavior default:
  assigns \nothing;
  ensures (_C_3 : ((_C_4 : (\result <= \at(a,Old))) &&
                    ((_C_6 : (\result <= \at(b,Old))) &&
                      (_C_7 : ((\result == \at(a,Old)) ||
                                (\result == \at(b,Old)))))));
{  
   (var int32 tmp);
   
   {  (if (a < b) then (_C_2 : (tmp = a)) else (_C_1 : (tmp = b)));
      
      (return tmp)
   }
}
