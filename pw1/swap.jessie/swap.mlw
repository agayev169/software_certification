theory Jessie_model

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

type charP

type int32

type int8

type intP

type padding

type voidP

function charP_tag  : (tag_id charP)

axiom charP_int "charP_int": ((int_of_tag charP_tag) = (1))

function charP_of_pointer_address (pointer ()) : (pointer charP)

axiom charP_of_pointer_address_of_pointer_addr "charP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer charP).
  (p = (charP_of_pointer_address (pointer_address p))))

axiom charP_parenttag_bottom "charP_parenttag_bottom":
 (parenttag charP_tag bottom_tag)

axiom charP_tags "charP_tags":
 (forall x:(pointer charP).
  (forall charP_tag_table:(tag_table charP).
   (instanceof charP_tag_table x charP_tag)))

function integer_of_int32 int32 : int

predicate eq_int32(x:int32) (y:int32) =
 ((integer_of_int32 x) = (integer_of_int32 y))

function integer_of_int8 int8 : int

predicate eq_int8(x:int8) (y:int8) =
 ((integer_of_int8 x) = (integer_of_int8 y))

function int32_of_integer int : int32

axiom int32_coerce "int32_coerce":
 (forall x:int.
  (((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) ->
   ((integer_of_int32 (int32_of_integer x)) = x)))

axiom int32_extensionality "int32_extensionality":
 (forall x:int32.
  (forall y:int32[((integer_of_int32 x) = (integer_of_int32 y))].
   (((integer_of_int32 x) = (integer_of_int32 y)) -> (x = y))))

axiom int32_range "int32_range":
 (forall x:int32.
  ((Int.(<=) (-2147483648) (integer_of_int32 x))
  /\ (Int.(<=) (integer_of_int32 x) (2147483647))))

function int8_of_integer int : int8

axiom int8_coerce "int8_coerce":
 (forall x:int.
  (((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) ->
   ((integer_of_int8 (int8_of_integer x)) = x)))

axiom int8_extensionality "int8_extensionality":
 (forall x:int8.
  (forall y:int8[((integer_of_int8 x) = (integer_of_int8 y))].
   (((integer_of_int8 x) = (integer_of_int8 y)) -> (x = y))))

axiom int8_range "int8_range":
 (forall x:int8.
  ((Int.(<=) (-128) (integer_of_int8 x))
  /\ (Int.(<=) (integer_of_int8 x) (127))))

function intP_tag  : (tag_id intP)

axiom intP_int "intP_int": ((int_of_tag intP_tag) = (1))

function intP_of_pointer_address (pointer ()) : (pointer intP)

axiom intP_of_pointer_address_of_pointer_addr "intP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer intP).
  (p = (intP_of_pointer_address (pointer_address p))))

axiom intP_parenttag_bottom "intP_parenttag_bottom":
 (parenttag intP_tag bottom_tag)

axiom intP_tags "intP_tags":
 (forall x:(pointer intP).
  (forall intP_tag_table:(tag_table intP).
   (instanceof intP_tag_table x intP_tag)))

predicate left_valid_struct_charP(p:(pointer charP)) (a:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_min charP_alloc_table p) <= a)

predicate left_valid_struct_intP(p:(pointer intP)) (a:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_min intP_alloc_table p) <= a)

predicate left_valid_struct_voidP(p:(pointer voidP)) (a:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_min voidP_alloc_table p) <= a)

axiom pointer_addr_of_charP_of_pointer_address "pointer_addr_of_charP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (charP_of_pointer_address p))))

axiom pointer_addr_of_intP_of_pointer_address "pointer_addr_of_intP_of_pointer_address":
 (forall p:(pointer ()). (p = (pointer_address (intP_of_pointer_address p))))

function voidP_of_pointer_address (pointer ()) : (pointer voidP)

axiom pointer_addr_of_voidP_of_pointer_address "pointer_addr_of_voidP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (voidP_of_pointer_address p))))

predicate right_valid_struct_charP(p:(pointer charP)) (b:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_max charP_alloc_table p) >= b)

predicate right_valid_struct_intP(p:(pointer intP)) (b:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_max intP_alloc_table p) >= b)

predicate right_valid_struct_voidP(p:(pointer voidP)) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_max voidP_alloc_table p) >= b)

predicate strict_valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate strict_valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

predicate valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

function voidP_tag  : (tag_id voidP)

axiom voidP_int "voidP_int": ((int_of_tag voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr "voidP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer voidP).
  (p = (voidP_of_pointer_address (pointer_address p))))

axiom voidP_parenttag_bottom "voidP_parenttag_bottom":
 (parenttag voidP_tag bottom_tag)

axiom voidP_tags "voidP_tags":
 (forall x:(pointer voidP).
  (forall voidP_tag_table:(tag_table voidP).
   (instanceof voidP_tag_table x voidP_tag)))

end

module Jessie_program

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

use import Jessie_model

use import ref.Ref

use import jessie_why3.JessieDivision

use import jessie_why3.Jessie_memory_model_parameters

exception Loop_continue_exc ()

exception Loop_exit_exc ()

exception Return_label_exc ()

val charP_alloc_table : ref (alloc_table charP)

val charP_tag_table : ref (tag_table charP)

val alloc_struct_charP
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { true } writes { charP_alloc_table, charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val alloc_struct_charP_requires
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { (Int.(>=) n (0)) } writes { charP_alloc_table,
    charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val intP_alloc_table : ref (alloc_table intP)

val intP_tag_table : ref (tag_table intP)

val alloc_struct_intP
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { true } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val alloc_struct_intP_requires
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { (Int.(>=) n (0)) } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val voidP_alloc_table : ref (alloc_table voidP)

val voidP_tag_table : ref (tag_table voidP)

val alloc_struct_voidP
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val alloc_struct_voidP_requires
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { (Int.(>=) n (0)) } writes { voidP_alloc_table,
    voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val any_int32 (_anonymous:()) : int32 requires { true }  ensures { true }

val any_int8 (_anonymous:()) : int8 requires { true }  ensures { true }

val int32_of_integer_
 (x:int) : int32
  requires { ((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) }
   ensures { ((integer_of_int32 result) = x) }

val int8_of_integer_
 (x:int) : int8
  requires { ((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) }
   ensures { ((integer_of_int8 result) = x) }

val safe_int32_of_integer_
 (x:int) : int32
  requires { true }  ensures { ((integer_of_int32 result) = x) }

val safe_int8_of_integer_
 (x:int) : int8 requires { true }  ensures { ((integer_of_int8 result) = x) }

val swap
 (p:(pointer intP))
  (q:(pointer intP))
   (intP_intM_q_2:ref (memory intP int32))
    (intP_intM_p_1:ref (memory intP int32))
     (intP_q_2_alloc_table:(alloc_table intP))
      (intP_p_1_alloc_table:(alloc_table intP)) : ()
       requires { true } reads { intP_intM_p_1, intP_intM_q_2 }  writes
       { intP_intM_p_1, intP_intM_q_2 }
        ensures { (#"/home/agayev169/software_certification/pw1/" 0 0 0#
                  ((#"/home/agayev169/software_certification/pw1/swap.c" 20 12 26#
                   ((integer_of_int32 (select !intP_intM_p_1 p)) = (integer_of_int32
                                                                   (select
                                                                   (old !intP_intM_q_2)
                                                                   q))))
                  /\ (#"/home/agayev169/software_certification/pw1/swap.c" 21 12 26#
                     ((integer_of_int32 (select !intP_intM_q_2 q)) = 
                     (integer_of_int32 (select (old !intP_intM_p_1) p)))))) }

val swap_requires
 (p:(pointer intP))
  (q:(pointer intP))
   (intP_intM_q_2:ref (memory intP int32))
    (intP_intM_p_1:ref (memory intP int32))
     (intP_q_2_alloc_table:(alloc_table intP))
      (intP_p_1_alloc_table:(alloc_table intP)) : ()
       requires { (#"/home/agayev169/software_certification/pw1/swap.jessie/" 0 0 0#
                  ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
                   (Int.(<=) (offset_min intP_p_1_alloc_table p) (0)))
                  /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
                      (Int.(>=) (offset_max intP_p_1_alloc_table p) (0)))
                     /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                         (Int.(<=) (offset_min intP_q_2_alloc_table q) (0)))
                        /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                            (Int.(>=) (offset_max intP_q_2_alloc_table q)
                            (0)))
                           /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 13 24#
                               (Int.(<=) (Int.(-_) (1000))
                               (integer_of_int32 (select !intP_intM_p_1 p))))
                              /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 22 33#
                                  (Int.(<=)
                                  (integer_of_int32
                                  (select !intP_intM_p_1 p)) (10000)))
                                 /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 18 13 24#
                                     (Int.(<=) (Int.(-_) (1000))
                                     (integer_of_int32
                                     (select !intP_intM_q_2 q))))
                                    /\ (#"/home/agayev169/software_certification/pw1/swap.c" 18 22 33#
                                       (Int.(<=)
                                       (integer_of_int32
                                       (select !intP_intM_q_2 q)) (10000))))))))))) }
       reads { intP_intM_p_1, intP_intM_q_2 }  writes { intP_intM_p_1,
       intP_intM_q_2 }
        ensures { (#"/home/agayev169/software_certification/pw1/" 0 0 0#
                  ((#"/home/agayev169/software_certification/pw1/swap.c" 20 12 26#
                   ((integer_of_int32 (select !intP_intM_p_1 p)) = (integer_of_int32
                                                                   (select
                                                                   (old !intP_intM_q_2)
                                                                   q))))
                  /\ (#"/home/agayev169/software_certification/pw1/swap.c" 21 12 26#
                     ((integer_of_int32 (select !intP_intM_q_2 q)) = 
                     (integer_of_int32 (select (old !intP_intM_p_1) p)))))) }

let swap_ensures_default "W:diverges:N" "expl:Function swap, default behavior"
 #"/home/agayev169/software_certification/pw1/swap.c" 23 5 9#=
 fun (p : (pointer intP)) (q : (pointer intP)) (intP_intM_p_1 : ref (memory intP int32)) (intP_intM_q_2 : ref (memory intP int32)) (intP_p_1_alloc_table : (alloc_table intP)) (intP_q_2_alloc_table : (alloc_table intP)) ->
  requires { (#"/home/agayev169/software_certification/pw1/swap.jessie/" 0 0 0#
             ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
              (Int.(<=) (offset_min intP_p_1_alloc_table p) (0)))
             /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
                 (Int.(>=) (offset_max intP_p_1_alloc_table p) (0)))
                /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                    (Int.(<=) (offset_min intP_q_2_alloc_table q) (0)))
                   /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                       (Int.(>=) (offset_max intP_q_2_alloc_table q) (0)))
                      /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 13 24#
                          (Int.(<=) (Int.(-_) (1000))
                          (integer_of_int32 (select !intP_intM_p_1 p))))
                         /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 22 33#
                             (Int.(<=)
                             (integer_of_int32 (select !intP_intM_p_1 p))
                             (10000)))
                            /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 18 13 24#
                                (Int.(<=) (Int.(-_) (1000))
                                (integer_of_int32 (select !intP_intM_q_2 q))))
                               /\ (#"/home/agayev169/software_certification/pw1/swap.c" 18 22 33#
                                  (Int.(<=)
                                  (integer_of_int32
                                  (select !intP_intM_q_2 q)) (10000)))))))))))  }
  ensures { (#"/home/agayev169/software_certification/pw1/" 0 0 0#
            ((#"/home/agayev169/software_certification/pw1/swap.c" 20 12 26#
             ((integer_of_int32 (select !intP_intM_p_1 p)) = (integer_of_int32
                                                             (select
                                                             (old !intP_intM_q_2)
                                                             q))))
            /\ (#"/home/agayev169/software_certification/pw1/swap.c" 21 12 26#
               ((integer_of_int32 (select !intP_intM_q_2 q)) = (integer_of_int32
                                                               (select
                                                               (old !intP_intM_p_1)
                                                               p)))))) } 
  ('Init: 
  try
   begin
     (let _jessie_17 =
     (safe_int32_of_integer_ (Int.(+) (integer_of_int32 (safe_acc_ !intP_intM_p_1 p)) 
                              (integer_of_int32 (safe_acc_ !intP_intM_q_2 q)))) in
     (let _jessie_18 = p in (safe_upd_ intP_intM_p_1 _jessie_18 _jessie_17)));
    (let _jessie_22 =
    (safe_int32_of_integer_ (Int.(-) (integer_of_int32 (safe_acc_ !intP_intM_p_1 p)) 
                             (integer_of_int32 (safe_acc_ !intP_intM_q_2 q)))) in
    (let _jessie_23 = q in (safe_upd_ intP_intM_q_2 _jessie_23 _jessie_22)));
    (let _jessie_27 =
    (safe_int32_of_integer_ (Int.(-) (integer_of_int32 (safe_acc_ !intP_intM_p_1 p)) 
                             (integer_of_int32 (safe_acc_ !intP_intM_q_2 q)))) in
    (let _jessie_28 = p in (safe_upd_ intP_intM_p_1 _jessie_28 _jessie_27)));
    (raise Return); (raise Return) end with Return -> () end) 

let swap_safety "expl:Function swap, Safety"
 #"/home/agayev169/software_certification/pw1/swap.c" 23 5 9#=
 fun (p : (pointer intP)) (q : (pointer intP)) (intP_intM_p_1 : ref (memory intP int32)) (intP_intM_q_2 : ref (memory intP int32)) (intP_p_1_alloc_table : (alloc_table intP)) (intP_q_2_alloc_table : (alloc_table intP)) ->
  requires { (#"/home/agayev169/software_certification/pw1/swap.jessie/" 0 0 0#
             ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
              (Int.(<=) (offset_min intP_p_1_alloc_table p) (0)))
             /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 15 13 22#
                 (Int.(>=) (offset_max intP_p_1_alloc_table p) (0)))
                /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                    (Int.(<=) (offset_min intP_q_2_alloc_table q) (0)))
                   /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 16 13 22#
                       (Int.(>=) (offset_max intP_q_2_alloc_table q) (0)))
                      /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 13 24#
                          (Int.(<=) (Int.(-_) (1000))
                          (integer_of_int32 (select !intP_intM_p_1 p))))
                         /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 17 22 33#
                             (Int.(<=)
                             (integer_of_int32 (select !intP_intM_p_1 p))
                             (10000)))
                            /\ ((#"/home/agayev169/software_certification/pw1/swap.c" 18 13 24#
                                (Int.(<=) (Int.(-_) (1000))
                                (integer_of_int32 (select !intP_intM_q_2 q))))
                               /\ (#"/home/agayev169/software_certification/pw1/swap.c" 18 22 33#
                                  (Int.(<=)
                                  (integer_of_int32
                                  (select !intP_intM_q_2 q)) (10000)))))))))))  }
  ensures { true } 
  ('Init: 
  try
   begin
     (let _jessie_2 =
     ("expl:arithmetic overflow"
     #"/home/agayev169/software_certification/pw1/swap.c" 24 4 12#
     (int32_of_integer_ (Int.(+) (integer_of_int32 ("expl:pointer dereference"
                                                   #"/home/agayev169/software_certification/pw1/swap.c" 24 4 6#
                                                   (acc_ intP_p_1_alloc_table !intP_intM_p_1 p))) 
                         (integer_of_int32 ("expl:pointer dereference"
                                           #"/home/agayev169/software_certification/pw1/swap.c" 24 10 12#
                                           (acc_ intP_q_2_alloc_table !intP_intM_q_2 q)))))) in
     (let _jessie_3 = p in
     ("expl:pointer dereference"
     #"/home/agayev169/software_certification/pw1/swap.jessie/swap.jc" 47 15 149#
     (upd_ intP_p_1_alloc_table intP_intM_p_1 _jessie_3 _jessie_2))));
    (let _jessie_7 =
    ("expl:arithmetic overflow"
    #"/home/agayev169/software_certification/pw1/swap.c" 25 9 16#
    (int32_of_integer_ (Int.(-) (integer_of_int32 ("expl:pointer dereference"
                                                  #"/home/agayev169/software_certification/pw1/swap.c" 25 9 11#
                                                  (acc_ intP_p_1_alloc_table !intP_intM_p_1 p))) 
                        (integer_of_int32 ("expl:pointer dereference"
                                          #"/home/agayev169/software_certification/pw1/swap.c" 25 14 16#
                                          (acc_ intP_q_2_alloc_table !intP_intM_q_2 q)))))) in
    (let _jessie_8 = q in
    ("expl:pointer dereference"
    #"/home/agayev169/software_certification/pw1/swap.jessie/swap.jc" 49 16 155#
    (upd_ intP_q_2_alloc_table intP_intM_q_2 _jessie_8 _jessie_7))));
    (let _jessie_12 =
    ("expl:arithmetic overflow"
    #"/home/agayev169/software_certification/pw1/swap.c" 26 9 16#
    (int32_of_integer_ (Int.(-) (integer_of_int32 ("expl:pointer dereference"
                                                  #"/home/agayev169/software_certification/pw1/swap.c" 26 9 11#
                                                  (acc_ intP_p_1_alloc_table !intP_intM_p_1 p))) 
                        (integer_of_int32 ("expl:pointer dereference"
                                          #"/home/agayev169/software_certification/pw1/swap.c" 26 14 16#
                                          (acc_ intP_q_2_alloc_table !intP_intM_q_2 q)))))) in
    (let _jessie_13 = p in
    ("expl:pointer dereference"
    #"/home/agayev169/software_certification/pw1/swap.jessie/swap.jc" 51 16 159#
    (upd_ intP_p_1_alloc_table intP_intM_p_1 _jessie_13 _jessie_12))));
    (raise Return); (raise Return) end with Return -> () end) 

end


