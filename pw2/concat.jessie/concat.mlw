theory Jessie_model

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

type charP

type int32

type int8

type intP

type padding

type voidP

function charP_tag  : (tag_id charP)

axiom charP_int "charP_int": ((int_of_tag charP_tag) = (1))

function charP_of_pointer_address (pointer ()) : (pointer charP)

axiom charP_of_pointer_address_of_pointer_addr "charP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer charP).
  (p = (charP_of_pointer_address (pointer_address p))))

axiom charP_parenttag_bottom "charP_parenttag_bottom":
 (parenttag charP_tag bottom_tag)

axiom charP_tags "charP_tags":
 (forall x:(pointer charP).
  (forall charP_tag_table:(tag_table charP).
   (instanceof charP_tag_table x charP_tag)))

function integer_of_int32 int32 : int

predicate eq_int32(x:int32) (y:int32) =
 ((integer_of_int32 x) = (integer_of_int32 y))

function integer_of_int8 int8 : int

predicate eq_int8(x:int8) (y:int8) =
 ((integer_of_int8 x) = (integer_of_int8 y))

function int32_of_integer int : int32

axiom int32_coerce "int32_coerce":
 (forall x:int.
  (((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) ->
   ((integer_of_int32 (int32_of_integer x)) = x)))

axiom int32_extensionality "int32_extensionality":
 (forall x:int32.
  (forall y:int32[((integer_of_int32 x) = (integer_of_int32 y))].
   (((integer_of_int32 x) = (integer_of_int32 y)) -> (x = y))))

axiom int32_range "int32_range":
 (forall x:int32.
  ((Int.(<=) (-2147483648) (integer_of_int32 x))
  /\ (Int.(<=) (integer_of_int32 x) (2147483647))))

function int8_of_integer int : int8

axiom int8_coerce "int8_coerce":
 (forall x:int.
  (((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) ->
   ((integer_of_int8 (int8_of_integer x)) = x)))

axiom int8_extensionality "int8_extensionality":
 (forall x:int8.
  (forall y:int8[((integer_of_int8 x) = (integer_of_int8 y))].
   (((integer_of_int8 x) = (integer_of_int8 y)) -> (x = y))))

axiom int8_range "int8_range":
 (forall x:int8.
  ((Int.(<=) (-128) (integer_of_int8 x))
  /\ (Int.(<=) (integer_of_int8 x) (127))))

function intP_tag  : (tag_id intP)

axiom intP_int "intP_int": ((int_of_tag intP_tag) = (1))

function intP_of_pointer_address (pointer ()) : (pointer intP)

axiom intP_of_pointer_address_of_pointer_addr "intP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer intP).
  (p = (intP_of_pointer_address (pointer_address p))))

axiom intP_parenttag_bottom "intP_parenttag_bottom":
 (parenttag intP_tag bottom_tag)

axiom intP_tags "intP_tags":
 (forall x:(pointer intP).
  (forall intP_tag_table:(tag_table intP).
   (instanceof intP_tag_table x intP_tag)))

predicate left_valid_struct_charP(p:(pointer charP)) (a:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_min charP_alloc_table p) <= a)

predicate left_valid_struct_intP(p:(pointer intP)) (a:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_min intP_alloc_table p) <= a)

predicate left_valid_struct_voidP(p:(pointer voidP)) (a:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_min voidP_alloc_table p) <= a)

axiom pointer_addr_of_charP_of_pointer_address "pointer_addr_of_charP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (charP_of_pointer_address p))))

axiom pointer_addr_of_intP_of_pointer_address "pointer_addr_of_intP_of_pointer_address":
 (forall p:(pointer ()). (p = (pointer_address (intP_of_pointer_address p))))

function voidP_of_pointer_address (pointer ()) : (pointer voidP)

axiom pointer_addr_of_voidP_of_pointer_address "pointer_addr_of_voidP_of_pointer_address":
 (forall p:(pointer ()).
  (p = (pointer_address (voidP_of_pointer_address p))))

predicate right_valid_struct_charP(p:(pointer charP)) (b:int) (charP_alloc_table:(alloc_table charP)) =
 ((offset_max charP_alloc_table p) >= b)

predicate right_valid_struct_intP(p:(pointer intP)) (b:int) (intP_alloc_table:(alloc_table intP)) =
 ((offset_max intP_alloc_table p) >= b)

predicate right_valid_struct_voidP(p:(pointer voidP)) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 ((offset_max voidP_alloc_table p) >= b)

predicate strict_valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate strict_valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) = a)
 /\ ((offset_max charP_alloc_table p) = b))

predicate strict_valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) = a)
 /\ ((offset_max intP_alloc_table p) = b))

predicate strict_valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) = a)
 /\ ((offset_max voidP_alloc_table p) = b))

predicate valid_root_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_root_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_root_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

predicate valid_struct_charP(p:(pointer charP)) (a:int) (b:int) (charP_alloc_table:(alloc_table charP)) =
 (((offset_min charP_alloc_table p) <= a)
 /\ ((offset_max charP_alloc_table p) >= b))

predicate valid_struct_intP(p:(pointer intP)) (a:int) (b:int) (intP_alloc_table:(alloc_table intP)) =
 (((offset_min intP_alloc_table p) <= a)
 /\ ((offset_max intP_alloc_table p) >= b))

predicate valid_struct_voidP(p:(pointer voidP)) (a:int) (b:int) (voidP_alloc_table:(alloc_table voidP)) =
 (((offset_min voidP_alloc_table p) <= a)
 /\ ((offset_max voidP_alloc_table p) >= b))

function voidP_tag  : (tag_id voidP)

axiom voidP_int "voidP_int": ((int_of_tag voidP_tag) = (1))

axiom voidP_of_pointer_address_of_pointer_addr "voidP_of_pointer_address_of_pointer_addr":
 (forall p:(pointer voidP).
  (p = (voidP_of_pointer_address (pointer_address p))))

axiom voidP_parenttag_bottom "voidP_parenttag_bottom":
 (parenttag voidP_tag bottom_tag)

axiom voidP_tags "voidP_tags":
 (forall x:(pointer voidP).
  (forall voidP_tag_table:(tag_table voidP).
   (instanceof voidP_tag_table x voidP_tag)))

end

module Jessie_program

use import int.Int

use bool.Bool

use import jessie_why3theories.Jessie_memory_model

use import Jessie_model

use import ref.Ref

use import jessie_why3.JessieDivision

use import jessie_why3.Jessie_memory_model_parameters

exception Goto_while_0_break_0_exc ()

exception Goto_while_0_break_exc ()

exception Loop_continue_exc ()

exception Loop_exit_exc ()

exception Return_label_exc ()

val charP_alloc_table : ref (alloc_table charP)

val charP_tag_table : ref (tag_table charP)

val alloc_struct_charP
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { true } writes { charP_alloc_table, charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val alloc_struct_charP_requires
 (n:int)
  (charP_alloc_table:ref (alloc_table charP))
   (charP_tag_table:ref (tag_table charP)) : (pointer charP)
    requires { (Int.(>=) n (0)) } writes { charP_alloc_table,
    charP_tag_table }
     ensures { ((strict_valid_struct_charP result (0) (Int.(-) n (1))
                !charP_alloc_table)
               /\ ((alloc_extends (old !charP_alloc_table)
                   !charP_alloc_table)
                  /\ ((alloc_fresh (old !charP_alloc_table) result n)
                     /\ (instanceof !charP_tag_table result charP_tag)))) }

val intP_alloc_table : ref (alloc_table intP)

val intP_tag_table : ref (tag_table intP)

val alloc_struct_intP
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { true } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val alloc_struct_intP_requires
 (n:int)
  (intP_alloc_table:ref (alloc_table intP))
   (intP_tag_table:ref (tag_table intP)) : (pointer intP)
    requires { (Int.(>=) n (0)) } writes { intP_alloc_table, intP_tag_table }
     ensures { ((strict_valid_struct_intP result (0) (Int.(-) n (1))
                !intP_alloc_table)
               /\ ((alloc_extends (old !intP_alloc_table) !intP_alloc_table)
                  /\ ((alloc_fresh (old !intP_alloc_table) result n)
                     /\ (instanceof !intP_tag_table result intP_tag)))) }

val voidP_alloc_table : ref (alloc_table voidP)

val voidP_tag_table : ref (tag_table voidP)

val alloc_struct_voidP
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { true } writes { voidP_alloc_table, voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val alloc_struct_voidP_requires
 (n:int)
  (voidP_alloc_table:ref (alloc_table voidP))
   (voidP_tag_table:ref (tag_table voidP)) : (pointer voidP)
    requires { (Int.(>=) n (0)) } writes { voidP_alloc_table,
    voidP_tag_table }
     ensures { ((strict_valid_struct_voidP result (0) (Int.(-) n (1))
                !voidP_alloc_table)
               /\ ((alloc_extends (old !voidP_alloc_table)
                   !voidP_alloc_table)
                  /\ ((alloc_fresh (old !voidP_alloc_table) result n)
                     /\ (instanceof !voidP_tag_table result voidP_tag)))) }

val any_int32 (_anonymous:()) : int32 requires { true }  ensures { true }

val any_int8 (_anonymous:()) : int8 requires { true }  ensures { true }

val concat
 (a:(pointer intP))
  (na:int32)
   (b:(pointer intP))
    (nb:int32)
     (c:(pointer intP))
      (intP_intM_c_3:ref (memory intP int32))
       (intP_c_3_alloc_table:(alloc_table intP))
        (intP_b_2_alloc_table:(alloc_table intP))
         (intP_a_1_alloc_table:(alloc_table intP))
          (intP_intM_b_2:(memory intP int32))
           (intP_intM_a_1:(memory intP int32)) : ()
            requires { true } reads { intP_intM_c_3 }  writes
            { intP_intM_c_3 }
             ensures { (#"/home/agayev169/software_certification/pw2/" 0 0 0#
                       ((#"/home/agayev169/software_certification/pw2/concat.c" 9 12 55#
                        (forall i:int32.
                         (((Int.(<=) (0) (integer_of_int32 i))
                          /\ (Int.(<) (integer_of_int32 i)
                             (integer_of_int32 na))) ->
                          ((integer_of_int32
                           (select !intP_intM_c_3
                           (shift c (integer_of_int32 i)))) = (integer_of_int32
                                                              (select
                                                              intP_intM_a_1
                                                              (shift a
                                                              (integer_of_int32
                                                              i))))))))
                       /\ (#"/home/agayev169/software_certification/pw2/concat.c" 10 12 61#
                          (forall j_2:int32.
                           (((Int.(<=) (integer_of_int32 na)
                             (integer_of_int32 j_2))
                            /\ (Int.(<) (integer_of_int32 j_2)
                               (integer_of_int32 nb))) ->
                            ((integer_of_int32
                             (select !intP_intM_c_3
                             (shift c (integer_of_int32 j_2)))) = (integer_of_int32
                                                                  (select
                                                                  intP_intM_b_2
                                                                  (shift b
                                                                  (Int.(-)
                                                                  (integer_of_int32
                                                                  j_2)
                                                                  (integer_of_int32
                                                                  na))))))))))) }

val concat_requires
 (a:(pointer intP))
  (na:int32)
   (b:(pointer intP))
    (nb:int32)
     (c:(pointer intP))
      (intP_intM_c_3:ref (memory intP int32))
       (intP_c_3_alloc_table:(alloc_table intP))
        (intP_b_2_alloc_table:(alloc_table intP))
         (intP_a_1_alloc_table:(alloc_table intP))
          (intP_intM_b_2:(memory intP int32))
           (intP_intM_a_1:(memory intP int32)) : ()
            requires { (#"/home/agayev169/software_certification/pw2/concat.jessie/" 0 0 0#
                       ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
                        (Int.(<=) (offset_min intP_a_1_alloc_table a) (0)))
                       /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
                           (Int.(>=) (offset_max intP_a_1_alloc_table a)
                           (Int.(-) (integer_of_int32 na) (1))))
                          /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                              (Int.(<=) (offset_min intP_b_2_alloc_table b)
                              (0)))
                             /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                                 (Int.(>=)
                                 (offset_max intP_b_2_alloc_table b)
                                 (Int.(-) (integer_of_int32 nb) (1))))
                                /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                                    (Int.(<=)
                                    (offset_min intP_c_3_alloc_table c) (0)))
                                   /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                                       (Int.(>=)
                                       (offset_max intP_c_3_alloc_table c)
                                       (Int.(-)
                                       (Int.(+) (integer_of_int32 na)
                                       (integer_of_int32 nb)) (1))))
                                      /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 5 13 19#
                                          (Int.(>) (integer_of_int32 na) (0)))
                                         /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 6 13 19#
                                             (Int.(>) (integer_of_int32 nb)
                                             (0)))
                                            /\ (#"/home/agayev169/software_certification/pw2/concat.c" 7 13 33#
                                               (Int.(<)
                                               (Int.(+) (integer_of_int32 na)
                                               (integer_of_int32 nb))
                                               (1000000000)))))))))))) }
            reads { intP_intM_c_3 }  writes { intP_intM_c_3 }
             ensures { (#"/home/agayev169/software_certification/pw2/" 0 0 0#
                       ((#"/home/agayev169/software_certification/pw2/concat.c" 9 12 55#
                        (forall i:int32.
                         (((Int.(<=) (0) (integer_of_int32 i))
                          /\ (Int.(<) (integer_of_int32 i)
                             (integer_of_int32 na))) ->
                          ((integer_of_int32
                           (select !intP_intM_c_3
                           (shift c (integer_of_int32 i)))) = (integer_of_int32
                                                              (select
                                                              intP_intM_a_1
                                                              (shift a
                                                              (integer_of_int32
                                                              i))))))))
                       /\ (#"/home/agayev169/software_certification/pw2/concat.c" 10 12 61#
                          (forall j_2:int32.
                           (((Int.(<=) (integer_of_int32 na)
                             (integer_of_int32 j_2))
                            /\ (Int.(<) (integer_of_int32 j_2)
                               (integer_of_int32 nb))) ->
                            ((integer_of_int32
                             (select !intP_intM_c_3
                             (shift c (integer_of_int32 j_2)))) = (integer_of_int32
                                                                  (select
                                                                  intP_intM_b_2
                                                                  (shift b
                                                                  (Int.(-)
                                                                  (integer_of_int32
                                                                  j_2)
                                                                  (integer_of_int32
                                                                  na))))))))))) }

val int32_of_integer_
 (x:int) : int32
  requires { ((Int.(<=) (-2147483648) x) /\ (Int.(<=) x (2147483647))) }
   ensures { ((integer_of_int32 result) = x) }

val int8_of_integer_
 (x:int) : int8
  requires { ((Int.(<=) (-128) x) /\ (Int.(<=) x (127))) }
   ensures { ((integer_of_int8 result) = x) }

val safe_int32_of_integer_
 (x:int) : int32
  requires { true }  ensures { ((integer_of_int32 result) = x) }

val safe_int8_of_integer_
 (x:int) : int8 requires { true }  ensures { ((integer_of_int8 result) = x) }

let concat_ensures_default "W:diverges:N" "expl:Function concat, default behavior"
 #"/home/agayev169/software_certification/pw2/concat.c" 12 5 11#=
 fun (a : (pointer intP)) (na : int32) (b : (pointer intP)) (nb : int32) (c : (pointer intP)) (intP_intM_c_3 : ref (memory intP int32)) (intP_a_1_alloc_table : (alloc_table intP)) (intP_b_2_alloc_table : (alloc_table intP)) (intP_c_3_alloc_table : (alloc_table intP)) (intP_intM_a_1 : (memory intP int32)) (intP_intM_b_2 : (memory intP int32)) ->
  requires { (#"/home/agayev169/software_certification/pw2/concat.jessie/" 0 0 0#
             ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
              (Int.(<=) (offset_min intP_a_1_alloc_table a) (0)))
             /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
                 (Int.(>=) (offset_max intP_a_1_alloc_table a)
                 (Int.(-) (integer_of_int32 na) (1))))
                /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                    (Int.(<=) (offset_min intP_b_2_alloc_table b) (0)))
                   /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                       (Int.(>=) (offset_max intP_b_2_alloc_table b)
                       (Int.(-) (integer_of_int32 nb) (1))))
                      /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                          (Int.(<=) (offset_min intP_c_3_alloc_table c) (0)))
                         /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                             (Int.(>=) (offset_max intP_c_3_alloc_table c)
                             (Int.(-)
                             (Int.(+) (integer_of_int32 na)
                             (integer_of_int32 nb)) (1))))
                            /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 5 13 19#
                                (Int.(>) (integer_of_int32 na) (0)))
                               /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 6 13 19#
                                   (Int.(>) (integer_of_int32 nb) (0)))
                                  /\ (#"/home/agayev169/software_certification/pw2/concat.c" 7 13 33#
                                     (Int.(<)
                                     (Int.(+) (integer_of_int32 na)
                                     (integer_of_int32 nb)) (1000000000))))))))))))  }
  ensures { (#"/home/agayev169/software_certification/pw2/" 0 0 0#
            ((#"/home/agayev169/software_certification/pw2/concat.c" 9 12 55#
             (forall i:int32.
              (((Int.(<=) (0) (integer_of_int32 i))
               /\ (Int.(<) (integer_of_int32 i) (integer_of_int32 na))) ->
               ((integer_of_int32
                (select !intP_intM_c_3 (shift c (integer_of_int32 i)))) = 
               (integer_of_int32
               (select intP_intM_a_1 (shift a (integer_of_int32 i))))))))
            /\ (#"/home/agayev169/software_certification/pw2/concat.c" 10 12 61#
               (forall j_2:int32.
                (((Int.(<=) (integer_of_int32 na) (integer_of_int32 j_2))
                 /\ (Int.(<) (integer_of_int32 j_2) (integer_of_int32 nb))) ->
                 ((integer_of_int32
                  (select !intP_intM_c_3 (shift c (integer_of_int32 j_2)))) = 
                 (integer_of_int32
                 (select intP_intM_b_2
                 (shift b
                 (Int.(-) (integer_of_int32 j_2) (integer_of_int32 na))))))))))) }
  
  ('Init: 
  try
   begin
     (let i_0 = ref (any_int32 ()) in
     (let i_0_0 = ref (any_int32 ()) in
     begin
       try
        begin
          (let _jessie_28 = (i_0 := (safe_int32_of_integer_ (0))) in ());
         ('Loop_3: 
         begin
           loop
           invariant
             { ((#"/home/agayev169/software_certification/pw2/concat.c" 15 23 65#
                (forall j:int32.
                 (((Int.(<=) (0) (integer_of_int32 j))
                  /\ (Int.(<) (integer_of_int32 j) (integer_of_int32 !i_0))) ->
                  ((integer_of_int32
                   (select !intP_intM_c_3 (shift c (integer_of_int32 j)))) = 
                  (integer_of_int32
                  (select intP_intM_a_1 (shift a (integer_of_int32 j))))))))
               /\ (#"/home/agayev169/software_certification/pw2/concat.c" 14 23 35#
                  ((#"/home/agayev169/software_certification/pw2/concat.c" 14 23 29#
                   (Int.(<=) (0) (integer_of_int32 !i_0)))
                  /\ (#"/home/agayev169/software_certification/pw2/concat.c" 14 28 35#
                     (Int.(<=) (integer_of_int32 !i_0) (integer_of_int32 na)))))) }
             
            begin
              any () requires { true }  ensures { true } ;
             try
              begin
                (let _jessie_36 =
                begin
                  (if (Int.(<) (integer_of_int32 !i_0) (integer_of_int32 na))
                  then () else (raise (Goto_while_0_break_exc ())));
                 (let _jessie_34 =
                 (let _jessie_30 =
                 (safe_acc_ intP_intM_a_1 (shift a (integer_of_int32 !i_0))) in
                 (let _jessie_31 = c in
                 (let _jessie_32 = (integer_of_int32 !i_0) in
                 (let _jessie_33 = (shift _jessie_31 _jessie_32) in
                 begin
                   (safe_upd_ intP_intM_c_3 _jessie_33 _jessie_30);
                  _jessie_30 end)))) in ());
                 (i_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0) (1))));
                 !i_0 end in ()); (raise (Loop_continue_exc ())) end with
              Loop_continue_exc _jessie_4 -> () end end end;
          (raise (Goto_while_0_break_exc ())) end) end with
        Goto_while_0_break_exc _jessie_1 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_38 = (i_0_0 := na) in ());
        ('Loop_4: 
        begin
          loop
          invariant
            { ((#"/home/agayev169/software_certification/pw2/concat.c" 25 23 71#
               (forall j_1:int32.
                (((Int.(<=) (integer_of_int32 na) (integer_of_int32 j_1))
                 /\ (Int.(<) (integer_of_int32 j_1)
                    (integer_of_int32 !i_0_0))) ->
                 ((integer_of_int32
                  (select !intP_intM_c_3 (shift c (integer_of_int32 j_1)))) = 
                 (integer_of_int32
                 (select intP_intM_b_2
                 (shift b
                 (Int.(-) (integer_of_int32 j_1) (integer_of_int32 na)))))))))
              /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 24 23 66#
                  (forall j_0:int32.
                   (((Int.(<=) (0) (integer_of_int32 j_0))
                    /\ (Int.(<) (integer_of_int32 j_0) (integer_of_int32 na))) ->
                    ((integer_of_int32
                     (select !intP_intM_c_3 (shift c (integer_of_int32 j_0)))) = 
                    (integer_of_int32
                    (select intP_intM_a_1 (shift a (integer_of_int32 j_0))))))))
                 /\ (#"/home/agayev169/software_certification/pw2/concat.c" 23 23 41#
                    ((#"/home/agayev169/software_certification/pw2/concat.c" 23 23 30#
                     (Int.(<=) (integer_of_int32 na)
                     (integer_of_int32 !i_0_0)))
                    /\ (#"/home/agayev169/software_certification/pw2/concat.c" 23 29 41#
                       (Int.(<=) (integer_of_int32 !i_0_0)
                       (Int.(+) (integer_of_int32 na) (integer_of_int32 nb)))))))) }
            
           begin
             any () requires { true }  ensures { true } ;
            try
             begin
               (let _jessie_46 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0) (integer_of_int32 
                                                         (safe_int32_of_integer_ 
                                                          (Int.(+) (integer_of_int32 na) 
                                                           (integer_of_int32 nb)))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (let _jessie_44 =
                (let _jessie_40 =
                (safe_acc_ intP_intM_b_2 (shift b (integer_of_int32 (safe_int32_of_integer_ 
                                                                    (Int.(-) 
                                                                    (integer_of_int32 !i_0_0) 
                                                                    (integer_of_int32 na)))))) in
                (let _jessie_41 = c in
                (let _jessie_42 = (integer_of_int32 !i_0_0) in
                (let _jessie_43 = (shift _jessie_41 _jessie_42) in
                begin
                  (safe_upd_ intP_intM_c_3 _jessie_43 _jessie_40); _jessie_40
                end)))) in ());
                (i_0_0 := (safe_int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0) (1))));
                !i_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_6 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_2 -> ('While_0_break_0:  ()) end;
      (raise Return) end)); (raise Return) end with Return -> () end) 

let concat_safety "expl:Function concat, Safety"
 #"/home/agayev169/software_certification/pw2/concat.c" 12 5 11#=
 fun (a : (pointer intP)) (na : int32) (b : (pointer intP)) (nb : int32) (c : (pointer intP)) (intP_intM_c_3 : ref (memory intP int32)) (intP_a_1_alloc_table : (alloc_table intP)) (intP_b_2_alloc_table : (alloc_table intP)) (intP_c_3_alloc_table : (alloc_table intP)) (intP_intM_a_1 : (memory intP int32)) (intP_intM_b_2 : (memory intP int32)) ->
  requires { (#"/home/agayev169/software_certification/pw2/concat.jessie/" 0 0 0#
             ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
              (Int.(<=) (offset_min intP_a_1_alloc_table a) (0)))
             /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 2 13 34#
                 (Int.(>=) (offset_max intP_a_1_alloc_table a)
                 (Int.(-) (integer_of_int32 na) (1))))
                /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                    (Int.(<=) (offset_min intP_b_2_alloc_table b) (0)))
                   /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 3 13 34#
                       (Int.(>=) (offset_max intP_b_2_alloc_table b)
                       (Int.(-) (integer_of_int32 nb) (1))))
                      /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                          (Int.(<=) (offset_min intP_c_3_alloc_table c) (0)))
                         /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 4 13 39#
                             (Int.(>=) (offset_max intP_c_3_alloc_table c)
                             (Int.(-)
                             (Int.(+) (integer_of_int32 na)
                             (integer_of_int32 nb)) (1))))
                            /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 5 13 19#
                                (Int.(>) (integer_of_int32 na) (0)))
                               /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 6 13 19#
                                   (Int.(>) (integer_of_int32 nb) (0)))
                                  /\ (#"/home/agayev169/software_certification/pw2/concat.c" 7 13 33#
                                     (Int.(<)
                                     (Int.(+) (integer_of_int32 na)
                                     (integer_of_int32 nb)) (1000000000))))))))))))  }
  ensures { true } 
  ('Init: 
  try
   begin
     (let i_0 = ref (any_int32 ()) in
     (let i_0_0 = ref (any_int32 ()) in
     begin
       try
        begin
          (let _jessie_8 = (i_0 := (safe_int32_of_integer_ (0))) in ());
         ('Loop_1: 
         begin
           loop
           invariant
             { (#"/home/agayev169/software_certification/pw2/concat.jessie/concat.jc" 62 9 815#
               true) }
             variant { (#"/home/agayev169/software_certification/pw2/concat.c" 16 21 27# 
               (Int.(-) (integer_of_int32 na) (integer_of_int32 !i_0))) }
            begin
              any ()
              requires { true } reads { i_0, intP_intM_c_3 } 
               ensures { ((#"/home/agayev169/software_certification/pw2/concat.c" 15 23 65#
                          (forall j:int32.
                           (((Int.(<=) (0) (integer_of_int32 j))
                            /\ (Int.(<) (integer_of_int32 j)
                               (integer_of_int32 !i_0))) ->
                            ((integer_of_int32
                             (select !intP_intM_c_3
                             (shift c (integer_of_int32 j)))) = (integer_of_int32
                                                                (select
                                                                intP_intM_a_1
                                                                (shift a
                                                                (integer_of_int32
                                                                j))))))))
                         /\ (#"/home/agayev169/software_certification/pw2/concat.c" 14 23 35#
                            ((#"/home/agayev169/software_certification/pw2/concat.c" 14 23 29#
                             (Int.(<=) (0) (integer_of_int32 !i_0)))
                            /\ (#"/home/agayev169/software_certification/pw2/concat.c" 14 28 35#
                               (Int.(<=) (integer_of_int32 !i_0)
                               (integer_of_int32 na)))))) } ;
             try
              begin
                (let _jessie_16 =
                begin
                  (if (Int.(<) (integer_of_int32 !i_0) (integer_of_int32 na))
                  then () else (raise (Goto_while_0_break_exc ())));
                 (let _jessie_14 =
                 (let _jessie_10 =
                 ("expl:pointer dereference"
                 #"/home/agayev169/software_certification/pw2/concat.c" 19 15 19#
                 (offset_acc_ intP_a_1_alloc_table intP_intM_a_1 a (integer_of_int32 !i_0))) in
                 (let _jessie_11 = c in
                 (let _jessie_12 = (integer_of_int32 !i_0) in
                 (let _jessie_13 = (shift _jessie_11 _jessie_12) in
                 ("expl:pointer dereference"
                 #"/home/agayev169/software_certification/pw2/concat.jessie/concat.jc" 75 28 218#
                 begin
                   (offset_upd_ intP_c_3_alloc_table intP_intM_c_3 _jessie_11 _jessie_12 _jessie_10);
                  _jessie_10 end))))) in ());
                 (i_0 := ("expl:arithmetic overflow"
                         #"/home/agayev169/software_certification/pw2/concat.c" 18 28 31#
                         (int32_of_integer_ (Int.(+) (integer_of_int32 !i_0) (1)))));
                 !i_0 end in ()); (raise (Loop_continue_exc ())) end with
              Loop_continue_exc _jessie_4 -> () end end end;
          (raise (Goto_while_0_break_exc ())) end) end with
        Goto_while_0_break_exc _jessie_1 -> ('While_0_break:  ()) end;
      try
       begin
         (let _jessie_18 = (i_0_0 := na) in ());
        ('Loop_2: 
        begin
          loop
          invariant
            { (#"/home/agayev169/software_certification/pw2/concat.jessie/concat.jc" 87 9 1477#
              true) }
            variant { (#"/home/agayev169/software_certification/pw2/concat.c" 26 21 32# 
              (Int.(-) (Int.(+) (integer_of_int32 na) (integer_of_int32 nb))
              (integer_of_int32 !i_0_0))) }
           begin
             any ()
             requires { true } reads { i_0_0, intP_intM_c_3 } 
              ensures { ((#"/home/agayev169/software_certification/pw2/concat.c" 25 23 71#
                         (forall j_1:int32.
                          (((Int.(<=) (integer_of_int32 na)
                            (integer_of_int32 j_1))
                           /\ (Int.(<) (integer_of_int32 j_1)
                              (integer_of_int32 !i_0_0))) ->
                           ((integer_of_int32
                            (select !intP_intM_c_3
                            (shift c (integer_of_int32 j_1)))) = (integer_of_int32
                                                                 (select
                                                                 intP_intM_b_2
                                                                 (shift b
                                                                 (Int.(-)
                                                                 (integer_of_int32
                                                                 j_1)
                                                                 (integer_of_int32
                                                                 na)))))))))
                        /\ ((#"/home/agayev169/software_certification/pw2/concat.c" 24 23 66#
                            (forall j_0:int32.
                             (((Int.(<=) (0) (integer_of_int32 j_0))
                              /\ (Int.(<) (integer_of_int32 j_0)
                                 (integer_of_int32 na))) ->
                              ((integer_of_int32
                               (select !intP_intM_c_3
                               (shift c (integer_of_int32 j_0)))) = (integer_of_int32
                                                                    (select
                                                                    intP_intM_a_1
                                                                    (shift a
                                                                    (integer_of_int32
                                                                    j_0))))))))
                           /\ (#"/home/agayev169/software_certification/pw2/concat.c" 23 23 41#
                              ((#"/home/agayev169/software_certification/pw2/concat.c" 23 23 30#
                               (Int.(<=) (integer_of_int32 na)
                               (integer_of_int32 !i_0_0)))
                              /\ (#"/home/agayev169/software_certification/pw2/concat.c" 23 29 41#
                                 (Int.(<=) (integer_of_int32 !i_0_0)
                                 (Int.(+) (integer_of_int32 na)
                                 (integer_of_int32 nb)))))))) } ;
            try
             begin
               (let _jessie_26 =
               begin
                 (if (Int.(<) (integer_of_int32 !i_0_0) (integer_of_int32 
                                                         ("expl:arithmetic overflow"
                                                         #"/home/agayev169/software_certification/pw2/concat.c" 28 25 32#
                                                         (int32_of_integer_ 
                                                          (Int.(+) (integer_of_int32 na) 
                                                           (integer_of_int32 nb))))))
                 then () else (raise (Goto_while_0_break_0_exc ())));
                (let _jessie_24 =
                (let _jessie_20 =
                ("expl:pointer dereference"
                #"/home/agayev169/software_certification/pw2/concat.c" 29 15 24#
                (offset_acc_ intP_b_2_alloc_table intP_intM_b_2 b (integer_of_int32 
                                                                   ("expl:arithmetic overflow"
                                                                   #"/home/agayev169/software_certification/pw2/concat.c" 29 17 23#
                                                                   (int32_of_integer_ 
                                                                    (Int.(-) 
                                                                    (integer_of_int32 !i_0_0) 
                                                                    (integer_of_int32 na))))))) in
                (let _jessie_21 = c in
                (let _jessie_22 = (integer_of_int32 !i_0_0) in
                (let _jessie_23 = (shift _jessie_21 _jessie_22) in
                ("expl:pointer dereference"
                #"/home/agayev169/software_certification/pw2/concat.jessie/concat.jc" 105 28 540#
                begin
                  (offset_upd_ intP_c_3_alloc_table intP_intM_c_3 _jessie_21 _jessie_22 _jessie_20);
                 _jessie_20 end))))) in ());
                (i_0_0 := ("expl:arithmetic overflow"
                          #"/home/agayev169/software_certification/pw2/concat.c" 28 34 37#
                          (int32_of_integer_ (Int.(+) (integer_of_int32 !i_0_0) (1)))));
                !i_0_0 end in ()); (raise (Loop_continue_exc ())) end with
             Loop_continue_exc _jessie_6 -> () end end end;
         (raise (Goto_while_0_break_0_exc ())) end) end with
       Goto_while_0_break_0_exc _jessie_2 -> ('While_0_break_0:  ()) end;
      (raise Return) end)); (raise Return) end with Return -> () end) 

end


